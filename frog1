
import sys, threading

input = lambda: sys.stdin.readline().strip()

def main():
    n = int(input())
    nums = list(map(int, input().split()))
    memo = {}
    def dp(index):
        if index in memo:
            return memo[index]
        if index == 0:
            return 0
        if index -1 >= 0:
            curr = dp(index-1) + abs(nums[index] - nums[index-1])
        if index -2 >= 0:
            curr = min(curr, dp(index-2) + abs(nums[index] - nums[index-2]))
        memo[index] = curr
        return curr
    print(dp(n-1))



if __name__ == '__main__':
    
    sys.setrecursionlimit(1 << 30)
    threading.stack_size(1 << 27)

    main_thread = threading.Thread(target=main)
    main_thread.start()
    main_thread.join()

